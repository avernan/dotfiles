#!/bin/bash
STOWOPT="--ignore=ignore --ignore=default"

howto() {
    [[ $# != 0 ]] && echo "$@" >&2
    echo -e "\n  Dotfiles setup:\n
\tsetup [OPTION] PACKAGENAME\n
  Description:\n
\tSet up dotfiles and symbolic links. PACKAGENAME should be the name of a
\tsubdirectory, with the exception of the packages listed below under
\tSpecial Packages.\n
  Options:\n
\t-D remove/unlink mode\n
  Special Packages:\n
\t+ color
\t\t Takes one more argument. Sets the color scheme for the Kitty terminal.
\t\t If not argument is given shows a preview of available schemes.
"
    [[ $# != 0 ]] && exit 1
    exit 0
}

remove() {
    stow -D "$1"
}

set_colors_kitty() {
    cfname="kitty/colors.ignore/$2.Kcolor"
    conf='kitty/.config/kitty/kitty.conf'
    if [[ -f $cfname ]] ; then
        echo "Loading colour scheme: $2"
        sed -E -e "/^# \{\{\{ Define colours/,/^# \}\}\}/ {
            /\{\{\{/r $cfname
            /\}\}\}|\{\{\{/ ! d
    }" "$conf" > temp && mv temp "$conf"
    else
        kitty/.local/bin/cschemes.py kitty/colors.ignore/
    fi
}

set_colors() {
    set_colors_kitty "$@"
}

main() {
    while getopts "Dh" opt ; do
        case $opt in
            D)
                local remove_package=1
                ;;
            h)
                howto
                ;;
            \?)
                howto "Invalid option: -$OPTARG"
                ;;
            :)
                howto "Option -$OPTARG requires an argument."
                ;;
        esac
    done
    shift $((OPTIND - 1))

    pkgname=$1
    case $pkgname in
        color)
            set_colors "$@"
            exit 0
            ;;
        *)
            [[ -d $1 ]] || howto "Invalid package name"
            ;;
    esac

    if [[ $remove_package ]]; then
        remove "$pkgname"
        exit 0
    fi

    host=$(hostname)
    defaults=$(find "$pkgname" -iname "*\.default")

    for default in $defaults ; do
        fname=${default%.default}
        cp "$default" "$fname"
        if [[ -f "${fname}.${host}.ignore" ]] ; then
            IFS=" ="
            while read -r option ; do
                optionarr=($option)
                sed -Ei "s/^\<${optionarr[0]}\>.*\$/$option/" "$fname"
            done < "${fname}.${host}.ignore"
        fi
        if [[ $pkgname =~ ^kitty/? ]] ; then
            cscheme=($(grep -E "^\<color_scheme\>" "$fname"))
            set_colors_kitty "$pkgname" "${cscheme[1]}" "$fname"
        fi
    done

    stow $STOWOPT "$pkgname"
}

main "$@"

