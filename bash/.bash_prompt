# vim:filetype=sh
# set -x

declare -A ps1
declare -A icon

source ~/.local/bin/devicons.sh

ps1[clear]=$(echo -e '\033[0m')
icon[git]=$(echo -e ${dev[git_branch]})

__git_info() {
    GIT_PS1_SHOWDIRTYSTATE=1
    GIT_PS1_SHOWSTASHSTATE=1
    GIT_PS1_SHOWUNTRACKEDFILES=1
    GIT_PS1_SHOWUPSTREAM="verbose name"

    local git_ps1
    if git_ps1=$(__git_ps1) && [[ -n $git_ps1 ]] ; then
        # Valid git repo. Set elements of array
        ps1_info[git]=1
        for word in ${git_ps1} ; do
            case $word in
                \(*)
                    ps1_info[git_branch]=${word:1}
                    ;;
                [^a-zA-Z]*)
                    [[ $word =~ '*' ]] && ps1_info[git_dirty]=1
                    [[ $word =~ [^u]\+ ]] && ps1_info[git_staged]=1
                    [[ $word =~  '$' ]] && ps1_info[git_stash]=1
                    [[ $word =~  '%' ]] && ps1_info[git_untracked]=1
                    ;;
                u*)
                    local sword=${word:1}
                    ps1_info[git_ahead]=$(expr "$sword" : '\(\+[0-9]*\)')
                    ps1_info[git_behind]=$(expr "$sword" : '.*\(\-[0-9]*\)')
                    ;;
                [a-zA-Z]*\))
                    ps1_info[git_remote]=${word%/*}
                    ;;
            esac
        done
    else
        ps1_info[git]=0
    fi
}

# TODO: battery

__prompt() {
    local __RET=$?
    declare -A ps1_info
    if [[ $# == 1 ]] ; then
        local __RET=$1
    fi

    __git_info

    ps1[cpath]=$(echo -e '\033[1;94m')

    if [[ ${ps1_info[git]} == 1 ]] ; then
        ps1[prompt]=${icon[git]}
    else
        ps1[prompt]="$"
    fi
    if [[ ${__RET} -ne 0 ]] ; then
        ps1[cprompt]=$(echo -e '\033[91m\033[1m')
        ps1[return]="${__RET} "
    else
        ps1[cprompt]=${ps1[clear]}
        ps1[return]=""
    fi

}

__prompt_timing() {
    local __RET=$?
    if [[ -n $DEBUG ]] ; then
        local time_start time_end time_used
        time_start=$(date +%s.%N)
        __prompt $__RET
        time_end=$(date +%s.%N)
        time_used=$(echo $time_end - $time_start | bc -l)
        echo $time_used | tee -a .PS1_timing
    else
        __prompt $__RET
    fi
}

# Time the execution of PROMPT_COMMAND?
PROMPT_COMMAND='__prompt_timing'

PS1=' \
\[${ps1[cpath]}\]\W\[${ps1[clear]}\] \
\[${ps1[cprompt]}\]${ps1[return]}\[${ps1[clear]}\]\
\[${ps1[cprompt]}\]${ps1[prompt]}\[${ps1[clear]}\]\
 '

